{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","cn","TodoList","todos","map","App","preparedTodos","todosFromServer","usersFromServer","find","useState","setTodos","setTitle","setUserId","isTitleEmpty","setIsTitleEmpty","isUserSelected","setIsUserSelected","action","method","onSubmit","event","preventDefault","currTodos","Math","max","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6184aa1c.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React from 'react';\nimport { User } from '../../types';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    completed,\n    title,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={cn('TodoInfo', {\n        'TodoInfo TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n\n      {todos.map(todo => {\n        return <TodoInfo todo={todo} key={todo.id} />;\n      })}\n\n    </section>\n  );\n};\n","import React, { FormEvent, useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\n\nimport './App.scss';\n\nexport const App: React.FC = () => {\n  const preparedTodos = todosFromServer.map(todo => {\n    return {\n      ...todo,\n      user: usersFromServer.find(user => user.id === todo.userId) || null,\n    };\n  });\n\n  const [todos, setTodos] = useState(preparedTodos);\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [isTitleEmpty, setIsTitleEmpty] = useState(false);\n  const [isUserSelected, setIsUserSelected] = useState(true);\n\n  const handleTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setIsTitleEmpty(false);\n  };\n\n  const handleSubmit = (event: FormEvent) => {\n    event.preventDefault();\n\n    if (!title) {\n      setIsTitleEmpty(true);\n    }\n\n    if (!userId) {\n      setIsUserSelected(false);\n    }\n\n    if (title && userId) {\n      setTodos(currTodos => ([\n        ...currTodos,\n        {\n          id: Math.max(...currTodos.map(todo => todo.id)) + 1,\n          title,\n          completed: false,\n          userId,\n          user: usersFromServer.find(user => user.id === userId) || null,\n        },\n      ]));\n      setTitle('');\n      setUserId(0);\n    }\n  };\n\n  const handleSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setIsUserSelected(true);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitle}\n          />\n\n          {isTitleEmpty\n            && <span className=\"error\">Please enter a title</span>}\n\n        </div>\n\n        <div className=\"field\">\n          <select\n            value={userId}\n            data-cy=\"userSelect\"\n            onChange={handleSelect}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => {\n              return (\n                <option value={user.id} key={user.id}>\n                  {user.name}\n                </option>\n              );\n            })}\n          </select>\n\n          {!isUserSelected\n            && <span className=\"error\">Please choose a user</span>}\n\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}